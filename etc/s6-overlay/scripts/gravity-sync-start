#!/command/with-contenv bash

function valid_ip() {
    local ip=$1
    local stat=1

    if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        OIFS=$IFS
        IFS='.'
        ip=($ip)
        IFS=$OIFS
        [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 &&
            ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
        stat=$?
    fi
    return $stat
}

enable=${GS_ENABLE:=false}
mode=${GS_MODE:=smart}
sync_period=${GS_SYNC_PERIOD:=*/5 * * * *}

unset GS_ENABLE
unset GS_MODE
unset GS_SYNC_PERIOD

: "${GS_ETC_PATH:=/etc/gravity-sync}"
: "${GS_CONFIG_FILE:=gravity-sync.conf}"
: "${GS_SSH_PORT:=22}"

ssh_port=$GS_SSH_PORT

config_file=${GS_ETC_PATH}/$GS_CONFIG_FILE

if [[ ${enable} == true ]]; then
    if [[ -z $GS_REMOTE_HOST ]]; then
        "echo variable GS_REMOTE_HOST is not set"
        exit 1
    fi

    if ! valid_ip "${GS_REMOTE_HOST}" ; then
        GS_REMOTE_HOST=$(dig +short "$GS_REMOTE_HOST")
        export GS_REMOTE_HOST
    fi

    remote_host=${GS_REMOTE_HOST}

    if [[ ! -f $config_file ]]; then
        touch "$config_file"
    fi

    while IFS="=" read -r var val; do
        # shellcheck disable=SC2001
        echo "${var#"GS_"}=$val" >>"$config_file"
        unset "$var"
    done <<<$(env | grep ^"GS_LOCAL\|GS_REMOTE\|GS_PH")

    while IFS="=" read -r var val; do
        echo "$var=$val" >>"$config_file"
        unset "$var"
    done <<<$(env | grep ^"GS_")

    nc -zv "${remote_host}" "${ssh_port}" && gravity-sync "$mode"

    cat <<EOF >/etc/cron.d/gravity
SHELL=/bin/bash
$sync_period root . /root/project_env.sh; nc -zv ${remote_host} ${ssh_port} && gravity-sync $mode
EOF

fi
